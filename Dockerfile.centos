FROM centos:7
ARG KUBE_VERSION=v1.15.8
ARG HELM2_VERSION=v2.12.2
ARG HELM3_VERSION=v3.0.2
ARG GIT_VERSION=2.24.1

RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf \
 && sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/*.repo \
 && sed -i 's|#\(baseurl.*\)mirror.centos.org/centos/$releasever|\1mirrors.ustc.edu.cn/centos/$releasever|' /etc/yum.repos.d/*.repo

ENV PATH='/s2e/tools:/s2e:/opt/apache-maven-3.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# add {src,artifact build/container} toolchain
#gitlab runner
RUN curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash \
 && yum install -y --nogpgcheck gitlab-runner \
 && yum install -y epel-release ansible \
 && yum install -y sudo \
 && echo "gitlab-runner ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

VOLUME ["/etc/gitlab-runner", "/home/gitlab-runner"]
VOLUME ["/var/run/docker.sock"]
## native C/C++ toolchain
RUN yum install -y vim bash  bash-completion wget unzip curl ca-certificates tzdata jq openssh-client \
  && yum groupinstall -y 'Development Tools' 'Legacy UNIX Compatibility' \
  && yum install -y  openssl-devel zlib-devel
# jdk
RUN yum install -y java-1.8.0-openjdk-devel
# maven
RUN mkdir -p /root/ts \
 && wget  -P /root/ts http://mirrors.ustc.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz \
 && tar -xvf /root/ts/apache-maven-3.6.3-bin.tar.gz -C /opt \
 && mkdir -p /root/.m2 \
 && cp /opt/apache-maven-3.6.3/conf/settings.xml /root/.m2/settings.xml \
 && ln -sf /root/.m2/settings.xml /opt/apache-maven-3.6.3/conf/settings.xml
# npm https://github.com/nodesource/distributions
RUN curl -sL https://rpm.nodesource.com/setup_10.x | bash -
# python3
RUN yum install -y python3-devel python3-pip python3-setuptools \
  && pip3 install --index-url='https://mirrors.aliyun.com/pypi/simple' requests
# golang
RUN wget -P /root/ts http://mirrors.ustc.edu.cn/golang/go1.13.7.linux-amd64.tar.gz \
 && tar -xvzf go1.13.7.linux-amd64.tar.gz -C /opt
# docker
RUN yum install -y yum-utils device-mapper-persistent-data lvm2 \
 && yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo \
 && yum install -y docker-ce
# git
RUN mkdir -p /root/ts \
 && yum install -y  openssl-devel zlib-devel curl-devel expat-devel gettext-devel \
 && wget  -P /root/ts "http://mirrors.ustc.edu.cn/kernel.org/software/scm/git/git-${GIT_VERSION}.tar.gz" \
 && tar -xvzf /root/ts/git-${GIT_VERSION}.tar.gz -C /root/ts \
 && make -j2 prefix=/usr/local install -C /root/ts/git-${GIT_VERSION}

# add offical deploy tools, k8s relate
RUN mkdir -pv /root/.m2 /root/.docker /root/.kube /s2e

# kubernetes client
RUN echo -e "\n\
    [kubernetes]\n\
    name=Kubernetes\n\
    baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\n\
    enabled=1\n\
    gpgcheck=1\n\
    repo_gpgcheck=1\n\
    gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n\
    https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg" > /etc/yum.repos.d/kubernetes.repo \
    && wget http://mirror.azure.cn/kubernetes/kubectl/${KUBE_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl \
    && chmod +x /usr/local/bin/kubectl \
    && wget  http://mirror.azure.cn/kubernetes/helm/helm-${HELM2_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm2 \
    && chmod +x /usr/local/bin/helm2 \
    && wget  http://mirror.azure.cn/kubernetes/helm/helm-dev-v3-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm3 \
    && chmod +x /usr/local/bin/helm3 \
    && ln -sf /usr/local/bin/helm2 /usr/local/bin/helm \
    && yum install -y nginx

# cicd logic
COPY s2e    /s2e

#
COPY Dockerfile*    /

# let fetch ci/cd template via http://localhost
COPY nginx/default.conf /etc/nginx/conf.d/

COPY default-secrets/gitlab-runner/config.toml /etc/gitlab-runner/config.toml
COPY default-secrets/gitlab-runner/profile.d/env.sh /etc/profile.d/env.sh
COPY default-secrets/maven/settings.xml /root/.m2/settings.xml
COPY default-secrets/docker/config.json /root/.docker/config.json
COPY default-secrets/k8s/               /root/.kube

RUN yum -y update && yum clean all && rm -rf /var/cache/yum && rm -rf /root/ts

ENTRYPOINT ["gitlab-runner"]
CMD ["run", "--user=root", "--working-directory=/home/gitlab-runner"]