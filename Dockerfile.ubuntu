FROM ubuntu:18.04

COPY . /cicd-s2e-runner

ENV HELPER_SCRIPTS=/cicd-s2e-runner/os/ubuntu/scripts/helpers
ENV INSTALL_SCRIPTS=/cicd-s2e-runner/os/ubuntu/scripts/installers
ARG DEBIAN_FRONTEND=noninteractive
ARG METADATA_FILE=/cicd-s2e-runner/os/ubuntu/build.txt

RUN apt-get update \
 && apt-get install -y lsb wget sudo dialog apt-utils \
 && apt-get -y install \
 && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

RUN  bash ${INSTALL_SCRIPTS}/basic.sh \
 && bash /cicd-s2e-runner/os/ubuntu/scripts/base/apt.sh \
 && bash /cicd-s2e-runner/os/ubuntu/scripts/base/limits.sh \
 && bash /cicd-s2e-runner/os/ubuntu/scripts/base/repos.sh


ARG TCLIST="7-zip.sh \
aliyun-cli.sh \
ansible.sh \
aws.sh \
aws-sam-cli.sh \
#azcopy.sh \
#azpowershell.sh \
#azure-cli.sh \
#azure-devops-cli.sh \
basic.sh \
bazel.sh \
boost.sh \
build-essential.sh \
clang.sh \
cleanup.sh \
cmake.sh \
complete-snap-setup.sh \
configure-environment.sh \
docker-compose.sh \
docker-moby.sh \
dotnetcore-sdk.sh \
dpkg-config.sh \
erlang.sh \
example.sh \
#firefox.sh \
gcc.sh \
#gfortran.sh \
git.sh \
github-cli.sh \
go.sh \
#google-chrome.sh \
#google-cloud-sdk.sh \
#haskell.sh \
#heroku.sh \
#hhvm.sh \
#homebrew.sh \
#homebrew-validate.sh \
#hosted-tool-cache.sh \
image-magick.sh \
#Install-Toolset.ps1 \
java-tools.sh \
#julia.sh \
kind.sh \
kubernetes-tools.sh \
#leiningen.sh \
#mercurial.sh \
#miniconda.sh \
#mongodb.sh \
#mono.sh \
#mysql.sh \
nodejs.sh \
nvm.sh \
packer.sh \
#phantomjs.sh \
php.sh \
#pollinate.sh \
#postgresql.sh \
#powershellcore.sh \
#preimagedata.sh \
#preparemetadata.sh \
pypy.sh \
python.sh \
#rndgenerator.sh \
ruby.sh \
rust.sh \
#sbt.sh \
#selenium.sh \
#sphinx.sh \
subversion.sh \
swift.sh \
#terraform.sh \
test-toolcache.sh \
validate-disk-space.sh \
Validate-Toolset.ps1 \
#vcpkg.sh \
vercel.sh"

RUN cd ${INSTALL_SCRIPTS}; \
 for s in $(ls .|sort); \
 do \
     set +e; \
     egrep "$s" <<< "${TCLIST}"; \
     rv=$? ;\
     set -e; \
     if [[ ${rv} -eq 0 ]];then \
         echo "###$s"; \
         bash validate-disk-space.sh;bash $s; \
     else \
         echo "*** not install $s"; \
     fi; \
 done; \
 bash ${INSTALL_SCRIPTS}/cleanup.sh; \
 cat ${METADATA_FILE}
