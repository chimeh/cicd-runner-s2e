#!/bin/bash
#author huangjimin
#jimin.huang@nx-engine.com
#generate helm template for middleware

USAGE=" usage: $0 CHARTS_DIR [NEWNAME] [POST2REPO]
"
echo ${USAGE}

###################################################################
THIS_SCRIPT=$(cd "$(dirname "${BASH_SOURCE:-$0}")"; pwd)/$(basename ${BASH_SOURCE:-$0})
#automatic detection TOPDIR
CUR_DIR=$(pwd)

if [[ -z ${OUTDIR} ]];then
OUTDIR=${CUR_DIR}
fi

echo THIS_SCRIPT=$THIS_SCRIPT
echo CUR_DIR=$CUR_DIR
echo OUTDIR=$OUTDIR

if [[ -n ${TEAMCITY_GIT_PATH} ]];then
    echo "Run on Teamcity"
    BUILD_COUNTER="-t${BUILD_NUMBER}"
elif [[ -n ${JENKINS_URL} ]];then
    echo "Run on Jenkins CI"
    BUILD_COUNTER="-j${BUILD_NUMBER}"
else
    echo "Run on Personal RC"
    BUILD_COUNTER=""
fi


####################################################################
CURDATE=$(date +%Y%m%d%H%M%S)
CHARTS_DIR="$1"
CATALOG_NAME="$2"

echo "CHART name set to ${CATALOG_NAME}"

#GET_VERSION=$(echo $1 | tr '[A-Z]' '[a-z]' |tr -csd  "[0-9._][a-z][A-Z]" "")   

if [[ -z ${VERSION} ]];then
    VERSION=${CURDATE}${BUILD_COUNTER}
fi
echo "CHART version set to ${VERSION}" 

RCNAME=${OUTDIR}/${CATALOG_NAME}-${VERSION}
echo "RC: ${CATALOG_NAME}-${CURDATE}"

mkdir -p ${RCNAME}/charts
cat >> ${RCNAME}/Chart.yaml <<EOF
name: ${CATALOG_NAME}
version: ${VERSION}
appVersion: 1.0
description: ""
keywords:
- middleware
uuid: $(uuidgen)
sources:
maintainers:
- name: Jimmy Huang
  email: jimagile@gmail.com
engine: gotpl
EOF

echo "##########################gen charts, and depencies"
echo  'dependencies:' > ${RCNAME}/requirements.yaml


echo "##############################################################"
echo "##########################gen middleware charts, and depencies"
MWDIR=${RCNAME}/charts/allinone/charts
MW_VALUEFILE=${RCNAME}/values-middleware-all-in-one.yaml

mkdir -p ${MWDIR}
/bin/cp -rf  ${CHARTS_DIR}/* ${MWDIR}

cat  >>  ${MW_VALUEFILE} <<EOF
allinone:
EOF
#################merge mw chart into one
echo  'dependencies:' > $(dirname ${MWDIR})/requirements.yaml
for i in `/bin/ls ${MWDIR} `; do 
    name=$i
    echo "auto gen charts for middleware ${name}"
    version=$( cat ${MWDIR}/${name}/Chart.yaml   |egrep "^version" | perl -ne 'print $1 if /^version:[ ]+(.+)/')
    if [[ -f ${MWDIR}/${name}/values.yaml ]];then
      mv ${MWDIR}/${name}/values.yaml ${MWDIR}/${name}/values-single.yaml
    fi
echo " let allinone depend ${name}"
cat >> $(dirname ${MWDIR})/requirements.yaml <<EOF
- name: ${name}
  version: ~${version}
  repository: "file://charts/${name}"
  condition: ${name}.enabled
EOF
echo " merge ${name} valuefile"
cat  >>  ${MW_VALUEFILE} <<EOF
  ${name}:
    enabled: false
EOF
perl -ne "chomp(\$_);print ' ' x 4;print \$_;print qq(\n);" ${MWDIR}/${name}/values-single.yaml  >>  ${MW_VALUEFILE}
done 



##################let mw below top chart
echo "name: allinone" > $(dirname ${MWDIR})/Chart.yaml
echo "version: 1.0" >> $(dirname ${MWDIR})/Chart.yaml

cat >> ${RCNAME}/requirements.yaml <<EOF
- name: allinone
  version: ~1.0
  repository: "file://charts/allinone"
EOF
cat ${MW_VALUEFILE} >> ${RCNAME}/values.yaml

################# post to repo
if [ $# -ge 3 ];then
  echo "post to repo"
  rm -rf ${RCNAME}/../${CATALOG_NAME}
  /bin/cp -rf ${RCNAME} ${RCNAME}/../${CATALOG_NAME}
  cd ${RCNAME}/..
  helm package ${CATALOG_NAME}
  curl --data-binary "@${CATALOG_NAME}-${VERSION}.tgz" https://helm-charts.nx-engine.com/api/charts
fi
