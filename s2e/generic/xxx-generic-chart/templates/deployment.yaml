{{- if (index .Values (include "xxxxxx.name" .)) -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: "{{ template "xxxxxx.fullname" . }}"
  labels:
    qcloud-app: "{{ template "xxxxxx.name" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: app
spec:
  {{- if and (index .Values (include "xxxxxx.name" .)) (index .Values (include "xxxxxx.name" .) "replicaCount") }}
  replicas: {{ index .Values (include "xxxxxx.name" .) "replicaCount" }}
  {{- end}}
  selector:
    matchLabels:
      qcloud-app: {{ template "xxxxxx.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        qcloud-app: {{ template "xxxxxx.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - image:   {{ index .Values (include "xxxxxx.name" .) "image" }}
        imagePullPolicy: IfNotPresent
        name: {{ template "xxxxxx.name" . }}
        {{- if (index .Values "global") }}
        {{- if (index .Values "global" "containers") }}
        {{- if (index .Values "global" "containers" "livenessProbe") }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - if [[ -f /tmp/healthy.sh ]];then . /tmp/healthy.sh;fi
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if (.Files.Glob "files/override-entrypoint.sh") }}
        command:
        - /cfg/override-entrypoint.sh
        {{- end}}
        {{- if  (index .Values (include "xxxxxx.name" .) "service")  }}
        {{- if  (index .Values (include "xxxxxx.name" .) "service" "ports")  }}
        ports:
        {{- range $port := (index .Values (include "xxxxxx.name" .) "service" "ports") }}
        - name: {{ $port }}-tcp
          containerPort: {{ $port }}
          protocol: TCP
        {{- end}}
        {{- end}}
        {{- end}}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ -f /docker/liveness.sh ] ; then chmod +x /docker/liveness.sh; exec /docker/liveness.sh ; fi
          failureThreshold: 16
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ -f /docker/ready.sh ] ; then chmod +x /docker/ready.sh; exec /docker/ready.sh ; fi
          failureThreshold: 24
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 3
        resources:
          {{ if  (index .Values (include "xxxxxx.name" .) "resources")  }}
{{ toYaml .Values (include "xxxxxx.name" .) "resources" | indent 10 }}
          {{- else -}}
          limits:
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 768Mi
          {{- end}}
          {{- if (index .Values "global") }}
          {{- if (index .Values "global" "containers") }}
          {{- if (index .Values "global" "containers" "securityContext") }}
          {{- if (index .Values "global" "containers" "securityContext" "privileged") }}
          securityContext:
            privileged: true
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
       {{- if or (.Files.Glob "files/env.txt") (.Files.Glob "files/override-entrypoint.sh") }}
        volumeMounts:
        - mountPath: /cfg/
          name: {{ template "xxxxxx.name" . }}       
       {{- end }}
       {{- if or (.Files.Glob "files/initdata/*")  }}
        - mountPath: /cfg/initdata/
          name: {{ template "xxxxxx.name" . }}-initdata       
       {{- end }}         
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{- if or (.Files.Glob "files/env.txt") (and (index .Values (include "xxxxxx.name" .)) (index .Values (include "xxxxxx.name" .) "env.txt")) }}
      volumes:
      - name: {{ template "xxxxxx.name" . }}
        configMap:
          defaultMode: 421
          name: {{ template "xxxxxx.name" . }}
      {{- end}}
      {{- if (.Files.Glob "files/initdata/*") }}
      - name: {{ template "xxxxxx.fullname" . }}-initdata
        configMap:
          defaultMode: 421
          name: {{ template "xxxxxx.fullname" . }}-initdata
      {{- end }}
{{- end -}}
