apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      initContainers:
      - name: remove-lost-found
        image: busybox:1
        command: ["rm", "-rf", "/var/lib/mysql/lost+found"]
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql
      containers:
      - name: mysql
        image: mysql:5.7
        securityContext:
          readOnlyRootFilesystem: true
        readinessProbe:
          exec:
            command: ["sh", "-c", "mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD"]
        ports:
        - name: mysql
          containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: rootPassword
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: run
          mountPath: /var/run/mysqld
        - name: mysql
          mountPath: /var/lib/mysql
        - name: mysql-conf
          mountPath: /etc/mysql/mysql.conf.d
      volumes:
      - name: mysql
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: mysql
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: mysql-conf
        configMap:
          name: mysql
      - name: tmp
        emptyDir:
          medium: Memory
      - name: run
        emptyDir:
          medium: Memory
