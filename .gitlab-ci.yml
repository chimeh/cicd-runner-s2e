#s2i:2

stages:
  - code-check
  - artifact-docker-build
  - deploy
  - release
#####
code-check:
  stage: code-check
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - s2i . exec gitlab-ci-check
    - done
    - s2i . exec post-gitlab-ci-check
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  allow_failure: true
  except:
    - tags
#####
artifact-docker-build:
  stage: artifact-docker-build
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - s2i . git-merge-master
    - s2i . artifact #${subdir}
    - s2i . docker #${subdir}
    - done
    - s2i . exec post-artifact-docker-build
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job

  except:
    - tags
    - master
  artifacts:
    when: on_success
    expire_in: 24h
    paths:
      - .s2i/
artifact-docker-build-master:
  stage: artifact-docker-build
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - s2i . artifact #${subdir}
    - s2i . docker #${subdir}
    - if [[ -f ${SRC_TOP}/build.sh ]];then bash ${SRC_TOP}/build.sh;fi
    - done
    - s2i . exec post-artifact-docker-build-master
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  only:
    - master
    - hotfix/*
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
#####
deploy-to-dev:
  stage: deploy
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export K8S_KUBECONFIG=${DEV_K8S_KUBECONFIG}
    - export K8S_NS_SUFFIX=${DEV_K8S_NS_SUFFIX}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${DEV_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${DEV_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${DEV_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${DEV_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${DEV_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${DEV_INGRESS_CLASS_PUBLIC}
    - s2i . deploy
    - done
    - s2i . exec post-deploy-dev
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  except:
    - tags
    - master
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
deploy-to-test:
  stage: deploy
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export K8S_KUBECONFIG=${TEST_K8S_KUBECONFIG}
    - export K8S_NS_SUFFIX=${TEST_K8S_NS_SUFFIX}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${TEST_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${TEST_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${TEST_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${TEST_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${TEST_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${TEST_INGRESS_CLASS_PUBLIC}
    - s2i . deploy
    - done
    - s2i . exec post-deploy-test
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  except:
    - tags
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
rollback-test-from-uat:
  stage: deploy
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export SRC_K8S_KUBECONFIG=${UAT_K8S_KUBECONFIG}
    - export SRC_K8S_NS==${S2E_ORG}${S2E_NS}${UAT_K8S_NS_SUFFIX}
    - export K8S_KUBECONFIG=${TEST_K8S_KUBECONFIG}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${TEST_K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${TEST_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${TEST_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${TEST_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${TEST_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${TEST_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${TEST_INGRESS_CLASS_PUBLIC}
    - s2i . exec k8s-app-mirror ${SRC_K8S_KUBECONFIG} ${K8S_KUBECONFIG}
    - done
    - s2i . exec post-rollback-test
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  except:
    - tags
    - master
    - /^hotfix.*$/
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
deploy-to-uat:
  stage: deploy
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export K8S_KUBECONFIG=${UAT_K8S_KUBECONFIG}
    - export K8S_NS_SUFFIX=${UAT_K8S_NS_SUFFIX}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${UAT_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${UAT_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${UAT_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${UAT_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${UAT_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${UAT_INGRESS_CLASS_PUBLIC}
    - s2i . deploy
    - done
    - s2i . exec post-deploy-uat
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  only:
    - master
    - /^hotfix.*$/
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
rollback-uat-from-prd:
  stage: deploy
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export SRC_K8S_KUBECONFIG=${PRD_K8S_KUBECONFIG}
    - export SRC_K8S_NS=${S2E_ORG}${S2E_NS}${PRD_K8S_NS_SUFFIX}
    - export K8S_KUBECONFIG=${UAT_K8S_KUBECONFIG}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${UAT_K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${UAT_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${UAT_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${UAT_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${UAT_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${UAT_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${UAT_INGRESS_CLASS_PUBLIC}
    - echo "##${subdir}"
    - s2i . exec k8s-app-mirror ${SRC_K8S_KUBECONFIG} ${K8S_KUBECONFIG}
    - done
    - s2i . exec post-rollback-uat
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  only:
    - master
    - /^hotfix.*$/
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
mirror-to-prd:
  stage: deploy
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - MOD_SUBDIR=$(git diff  --dirstat=files,0,cumulative  $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | sed 's/^[ 0-9.]\+% //g' | cut -d/ -f1 | sort | uniq)
    - echo ${MOD_SUBDIR}
    - for subdir in ${MOD_SUBDIR} .;do
    - cd ${CI_PROJECT_DIR}/${subdir}
    - echo "##${subdir}"
    - export S2E_ORG
    - export S2E_NS
    - export SRC_K8S_KUBECONFIG=${UAT_K8S_KUBECONFIG}
    - export SRC_K8S_NS=${S2E_ORG}${S2E_NS}${UAT_K8S_NS_SUFFIX}
    - export K8S_KUBECONFIG=${PRD_K8S_KUBECONFIG}
    - export K8S_NS=${S2E_ORG}${S2E_NS}${PRD_K8S_NS_SUFFIX}
    - export K8S_DOMAIN_INTERNAL=${PRD_K8S_DOMAIN_INTERNAL}
    - export K8S_DOMAIN_PUBLIC=${PRD_K8S_DOMAIN_PUBLIC}
    - export INGRESS_INTERNAL_ENABLED=${PRD_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_PUBLIC_ENABLED=${PRD_INGRESS_INTERNAL_ENABLED}
    - export INGRESS_CLASS_INTERNAL=${PRD_INGRESS_CLASS_INTERNAL}
    - export INGRESS_CLASS_PUBLIC=${PRD_INGRESS_CLASS_PUBLIC}
    - s2i k8s-app-mirror ${SRC_K8S_KUBECONFIG} ${K8S_KUBECONFIG}
    - done
    - s2i . exec post-deploy-prd
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  only:
    - master
  dependencies: []
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
#####
src-mr-create:
  stage: release
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - s2i . exec gitlab-mr-create
    - s2i . exec post-gitlab-mr-create
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  except:
    - master
    - /^hotfix.*$/
    - tags
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - .s2i/
pages:
  stage: deploy
  script:
    - mkdir -p .s2i
    - mkdir -p public
    - s2i . exec gitlab-pages-gen
  artifacts:
    paths:
      - public
    expire_in: 120h
  except:
    - master
    - /^hotfix.*$/
    - tags
gitlab-auto-merge:
  stage: release
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - s2i . exec gitlab-auto-merge
    - s2i . exec post-gitlab-auto-merge
  after_script:
    - s2i . exec post-all-job
  only:
    - /^hotfix.*$/
  except:
    - tags
  dependencies: []
#####

artifact-release:
  stage: release
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - export IMG="$(head -n 1 .s2i/s2i.*img.txt)"
    - echo ${IMG}
    - perl -ni -e "s@${DOCKER_REPO}.+@${IMG}@g;print" deployments/s2erunner/docker-compose.yaml deployments/s2emetricd/docker-compose.yaml
    - s2i . exec post-artifact-release
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  except:
    - tags
  artifacts:
    when: on_success
    name: ${CI_PROJECT_NAME}-${CI_JOB_STAGE}
    expire_in: 24h
    paths:
      - deployments
src-tag-version:
  stage: release
  when: manual
  script:
    - set -o allexport;s2ectl exec du -d 1; touch s2ectl.env;source  s2ectl.env;set +o allexport
    - s2i . exec post-src-tag-version
  after_script:
    - set -o allexport; source s2ectl.env;set +o allexport
    - s2i . exec post-all-job
  only:
    - master
